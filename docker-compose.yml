# Версия docker-compose
version: '2'
# Список наших сервисов (контейнеров)
services:
  nginx:
    # используем последний стабильный образ nginx
    image: nginx:latest
    # маршрутизируем порты
    ports:
      - "8095:80"
    restart: always
    # монтируем директории, слева директории на основной машине, справа - куда они монтируются в контейнере
    volumes:
      - ./.docker:/etc/nginx/conf.d
      - .:/var/www
      - ../logs/otus-network:/var/log/nginx
    # nginx должен общаться с php контейнером
    links:
      - php


  php:
    # у нас свой образ для PHP, указываем путь к нему и говорим что его надо собрать
    build: .docker
    # этот образ будет общаться с mysql
    links:
      - mysql
    # монтируем директорию с проектами
    volumes:
      - .:/var/www
      - ./.docker/php.ini:/usr/local/etc/php/php.ini

  mysql:
    image: mysql:5.7
    ports:
      - "3309:3306"
    volumes:
      - ../mysql/otus-network:/var/lib/mysql
      - ./.docker/mysql/master/:/etc/mysql/conf.d/
    # задаем пароль для root пользователя
    environment:
      MYSQL_ROOT_PASSWORD: secret

  mysqlslave:
      image: mysql:5.7
      ports:
        - "3319:3306"
      environment:
        - "MYSQL_ROOT_PASSWORD=root"
      volumes:
         - ./data/mysql-slave:/var/lib/mysql/
         - ./.docker/mysql/slave:/etc/mysql/conf.d/

  mysqlslave2:
      image: mysql:5.7
      ports:
        - "3320:3306"
      environment:
        - "MYSQL_ROOT_PASSWORD=root"
      volumes:
         - ./data/mysql-slave2:/var/lib/mysql/
         - ./.docker/mysql/slave2:/etc/mysql/conf.d/

  mysqlconfigure:
      image: mysql:5.7
      environment:
        - "MYSQL_SLAVE_PASSWORD=root"
        - "MYSQL_MASTER_PASSWORD=secret"
        - "MYSQL_ROOT_PASSWORD=root"
        - "MYSQL_REPLICATION_USER=repl"
        - "MYSQL_REPLICATION_PASSWORD=repl"
      volumes:
        - ./.docker/mysql/mysql_connector.sh:/tmp/mysql_connector.sh
      command: /bin/bash -x /tmp/mysql_connector.sh

  wrk:
    build: .docker/wrk
    command: tail -F anything
    links:
      - nginx
    hostname: wrk
    domainname: wrk.local
